<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
					http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
					http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
					http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
					http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
					http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd"
	default-lazy-init="true">

	<context:annotation-config></context:annotation-config>  <!--  让注解生效 -->
	<context:component-scan base-package="edu.gx.**"></context:component-scan>
	<!-- 导入资源文件 -->
	<context:property-placeholder location="classpath:db.properties"/>
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${datasource.driverClassName}"></property>
		<property name="url" value="${datasource.url}"></property>
		<property name="username" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="300" />
		<property name="timeBetweenEvictionRunsMillis" value="86400" />
		<property name="testWhileIdle" value="true" />
		<property name="validationQuery" value="SELECT 1 FROM dual" />
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>  <!-- 引用上面的数据源  里面的表全部复制到上面去-->
		<property name="packagesToScan">
			<list>
				<value>edu.gx.**.model</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
						${hibernate.dialect}
					</prop>
					<prop key="hibernate.show_sql">false</prop>
					<prop key="hibernate.query.substitutions">
						true 1, false 0
					</prop>
					<prop key="hibernate.default_batch_fetch_size">4</prop>
			</props>
		</property>
	</bean>
	
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">  <!-- 融器 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 事务管理器    被 class管理 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"> 
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<tx:advice id="advice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED"/>
			<!--  这句话的意思是以save开头的方法都开启事务 -->
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="alter*" propagation="REQUIRED"/>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="set*" propagation="REQUIRED"/>
			<tx:method name="select*" propagation="REQUIRED"/>
			<tx:method name="register" propagation="REQUIRED"/>
			<tx:method name="del*" propagation="REQUIRED"/>				
			<tx:method name="create*" propagation="REQUIRED"/>
			<tx:method name="process*" propagation="REQUIRED"/>
			<tx:method name="restore*" propagation="REQUIRED"/>
			<tx:method name="backup*" propagation="REQUIRED"/>
			<tx:method name="log*" propagation="REQUIRED"/>
			<tx:method name="giving*" propagation="REQUIRED"/>
			<tx:method name="auth*" propagation="REQUIRED"/>
			<tx:method name="sendMessage*" propagation="REQUIRED"/>
			<tx:method name="cust*" propagation="REQUIRED"/>
			<tx:method name="make*" propagation="REQUIRED"/>
			<tx:method name="*" read-only="true"/>
			   <!-- 这句话的意思是上面的方法没找到的就用这个 -->
		</tx:attributes>
	</tx:advice>
	
	<!--  'execution(* com.xyz.myapp.service.*.*(..))' -->
	<!-- 第一个*号代表返回值      这句haul意思是在哪些包下面 save update的方法 -->
	<aop:config>  <!--  切面编程 -->
		<aop:pointcut expression="(execution(* edu.gx..*Service.*(..)))" id="pointcut"/>
		<aop:advisor advice-ref="advice" pointcut-ref="pointcut"/>
	</aop:config>
		
	</beans>